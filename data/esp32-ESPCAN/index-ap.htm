<!DOCTYPE html>
<html charset="UTF-8" lang="en">
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script> -->
    <link href="bootstrap/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">
    <script src="bootstrap/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
    <title>DIY SMART BMS - Setup</title>
  </head>
  <body>

    <div class="container-sm">
      <img src="diy-logo-hoz-web.jpg" alt="DIY Battery Integration BMS">
      <hr><br>

      <h5>Initial configuration setup</h5>
        <br>
          <!-- Initial Config -->

            <!-- Wifi SSID -->
        <div class="d-flex flex-row bd-highlight mb-3">
            <div class="p-2 w-40 bd-highlight">
                <label class="form-label" for="wifissid">Wifi Network:</label>
            </div>
            <div class="p-2 bd-highlight">
                <select class="form-control" name="wifissid" id="wifissid" onclick="" onblur="SendJSONUpdate('wifissid')"></select>
            </div>
            <div class="p-2 bd-highlight">
                <button type="button" class="btn btn-success pull-right" id="GetWifiList" onclick="GetWifiList();">Scan</button>
            </div>
        </div>  
        <div class="d-flex flex-row bd-highlight mb-3">
            <div class="p-2 w-40 bd-highlight">
                <label class="form-label" for="wifipass">Wifi Password:</label>
            </div>
            <div class="p-2 flex-shrink-1 bd-highlight ">
                <input class="form-control" type="password" id="wifipass" onblur="SendJSONUpdate('wifipass')">
            </div>
        </div>
        <!-- Wifi Hostname -->
        <div class="d-flex flex-row bd-highlight mb-3">
          <div class="p-2 w-40 bd-highlight">
              <label class="form-label" for="wifihostname">mDNS Hostname:</label>
          </div>
          <div class="p-2 flex-shrink-1 bd-highlight ">
              <input class="form-control" type="textbox" id="wifihostname" onblur="SendJSONUpdate('wifihostname')">
          </div>
        </div>

            <!-- MQTT Server IP, Port and Client id -->
        <div class="d-flex flex-row bd-highlight mb-3">
            <div class="p-2 w-40 bd-highlight"><label class="form-label" for="mqttserverip">MQTT Server IP:</label>
                <input class="form-control" type="textbox" id="mqttserverip" onblur="SendJSONUpdate('mqttserverip')">
            </div>
            <div class="p-2 w-40 bd-highlight"><label class="form-label" for="mqttport">MQTT Port:</label>
                  <input class="form-control" type="number" id="mqttport" onblur="SendJSONUpdate('mqttport')">
            </div>
        </div>
        <div class="d-flex flex-row bd-highlight mb-3">
            <div class="p-2 w-40 bd-highlight"><label class="form-label" for="mqttclientid">MQTT Client id:</label>
                <input class="form-control" type="textbox" id="mqttclientid" onblur="SendJSONUpdate('mqttclientid')">
            </div>
        </div>

        <!-- MQTT Prefix and Parameter -->
        <div class="d-flex flex-row bd-highlight mb-3">
          <div class="p-2 w-40 bd-highlight"><label class="form-label" for="mqtttopic">MQTT Topic:</label>
            <input class="form-control" type="textbox" id="mqtttopic" onblur="SendJSONUpdate('mqtttopic')">
          </div>
            <div class="p-2 w-40 bd-highlight"><label class="form-label" for="mqttparameter">MQTT Parameter:</label>
            <input class="form-control" type="textbox" id="mqttparameter" onblur="SendJSONUpdate('mqttparameter')">
          </div>
        </div>

        <!-- MQTT Username and Password -->
        <br/>
        MQTT Authentication (Optional)
        <div class="d-flex flex-row bd-highlight mb-3">
            <div class="p-2 w-40 bd-highlight"><label class="form-label" for="mqttuser">MQTT Username:</label>
              <input class="form-control" type="textbox" id="mqttuser" onblur="SendJSONUpdate('mqttuser')">
            </div>
              <div class="p-2 w-40 bd-highlight"><label class="form-label" for="mqttpass">MQTT Password:</label>
              <input class="form-control" type="password" id="mqttpass" onblur="SendJSONUpdate('mqttpass')">
            </div>
        </div>

        <!-- Additional Boxes -->

        <div class="d-flex flex-row bd-highlight mb-3">
			<div class="p-2 w-40 bd-highlight"><label class="form-label" for="canbuscspin" >CAN Bus Chip Select Pin:</label></div>
            <div class="p-2 flex-shrink-1 bd-highlight">
				<input class="form-control" type="number" id="canbuscspin" onblur="SendJSONUpdate('canbuscspin')"></div>
        </div>
			  
        <div class="d-flex flex-row bd-highlight mb-3">
            <div class="col-sm-6">
                <div class="d-flex bd-highlight">
					<div class="p-2 w-40 bd-highlight"><label class="form-label" for="victronrxpin">Victron RX Pin:</label></div>
                <div class="p-2 flex-shrink-1 bd-highlight">
                  <input class="form-control" type="number" id="victronrxpin" onblur="SendJSONUpdate('victronrxpin')">
				</div>
			    </div>
            </div>

            <div class="col-sm-6">
                <div class="d-flex bd-highlight">
					<div class="p-2 w-40 bd-highlight"><label class="form-label" for="victrontxpin">Victron TX Pin:</label></div>
					<div class="p-2 flex-shrink-1 bd-highlight">
                  <input class="form-control" type="number" id="victrontxpin" onblur="SendJSONUpdate('victrontxpin')"></div>
				</div>
              </div>
			
        </div>

        <!-- End of additional boxes -->

        <div class="d-flex flex-row bd-highlight mb-3">
            <div class="p-2 bd-highlight">
              <button type="button" class="btn btn-danger pull-left" id="Reboot" onclick="rebootBMS();">Reboot & Apply</button>
            </div>
        </div>
        <!-- End of Wifi and MQTT Config -->

  </div>

  <script>
    var gateway = `ws://${window.location.hostname}/ws`; 
    //var gateway = `ws://10.10.10.91/ws`;
    var websocket;

    window.addEventListener('load', onLoad);
    function initWebSocket() {
      console.log('Trying to open a WebSocket connection...');
      websocket = new WebSocket(gateway);
      websocket.onopen    = onOpen;
      websocket.onclose   = onClose;
      websocket.onmessage = onMessage;
    }
    function onOpen(event) {
      console.log('Connection opened');
      setTimeout(GetWifiList, 500);
    }
    function onClose(event) {
      console.log('Connection closed');
      setTimeout(initWebSocket, 2000);
    }
    function onMessage(event) {
      console.log(event.data);
      const obj = JSON.parse(event.data);

      if(obj.hasOwnProperty('wifissid')) document.getElementById('wifissid').value=obj.wifissid;
      if(obj.hasOwnProperty('wifipass')) document.getElementById('wifipass').value=obj.wifipass;
      if(obj.hasOwnProperty('wifihostname')) document.getElementById('wifihostname').value=obj.wifihostname;
      if(obj.hasOwnProperty('canbuscspin')) document.getElementById('canbuscspin').value=obj.canbuscspin;
      if(obj.hasOwnProperty('victronrxpin')) document.getElementById('victronrxpin').value=obj.victronrxpin;
      if(obj.hasOwnProperty('victrontxpin')) document.getElementById('victrontxpin').value=obj.victrontxpin;
      if(obj.hasOwnProperty('mqttport')) document.getElementById('mqttport').value=obj.mqttport;
      if(obj.hasOwnProperty('mqttserverip')) document.getElementById('mqttserverip').value=obj.mqttserverip;
      if(obj.hasOwnProperty('mqttuser')) document.getElementById('mqttuser').value=obj.mqttuser;
      if(obj.hasOwnProperty('mqttpass')) document.getElementById('mqttpass').value=obj.mqttpass;
      if(obj.hasOwnProperty('mqttclientid')) document.getElementById('mqttclientid').value=obj.mqttclientid;
      if(obj.hasOwnProperty('mqtttopic')) document.getElementById('mqtttopic').value=obj.mqtttopic;
      if(obj.hasOwnProperty('mqttparameter')) document.getElementById('mqttparameter').value=obj.mqttparameter;
            
      // handle any WS messages or errors
      if(obj.hasOwnProperty('Message'))
        alert(obj.Message);
      if(obj.hasOwnProperty('ERROR'))
        alert(obj.ERROR);
        
    }

    function onLoad(event) {
      initWebSocket();
      GetWifiList();
    }

    function initButton() {
    }

    function isNumber(n){
      return Number(n)=== n;
    }

    function saveAll(){
      console.log('Sending Save All command');
      websocket.send(JSON.parse('{"saveall" : true}'));
    }

    function rebootBMS(){
      console.log('Sending Reboot command');
      var jsonobj = '{"reboot" : true}';
      //var jsonString = JSON.stringify(jsonobj);
      //websocket.send(JSON.parse(jsonString));
      websocket.send(jsonobj);
    }

    function SendJSONUpdate(textboxid) {
      //var boxvalue = document.getElementById(textboxid).value;
      var jsonobj;

      if (document.getElementById(textboxid).value == null)
      {
        console.log('getElementById returned null.');
        return;
      }

      if('wifissid' == textboxid) {
        selectElement = document.getElementById(textboxid);
        jsonobj = '{"' + textboxid + '" : "' + selectElement.options[selectElement.selectedIndex].value + '"}'; }
      else if (document.getElementById(textboxid).value == 'on' || document.getElementById(textboxid).value == 'off')
        jsonobj = '{"' + textboxid + '" : ' + document.getElementById(textboxid).checked + '}';
      else if(isNumber(document.getElementById(textboxid).value))
        jsonobj = '{"' + textboxid + '" : ' + document.getElementById(textboxid).value + '}';
      else
        jsonobj = '{"' + textboxid + '" : "' + document.getElementById(textboxid).value + '"}';

      var jsonString = JSON.stringify(jsonobj);
      console.log('Sending to Websocket: ' + JSON.parse(jsonString));
      websocket.send(JSON.parse(jsonString));
    }

    function GetWifiList()
    {
      console.log("Getting Wifi List");
      var serverurl = `http://${window.location.hostname}/scan`; 
      //var serverurl = `http://10.10.10.91/scan`; 
      //  GET request using fetch()
      fetch(serverurl)
   
          // Converting received data to JSON
        .then(response => response.json())
        .then(json => {
        
            var select = document.getElementById("wifissid");
            var previous = '';

            document.getElementById('wifissid').innerHTML = '';
            // Loop through each data and add a table row
            json.forEach(user => {
                var el = document.createElement("option");
                if (user.ssid != previous){
                    previous = user.ssid;
                    el.textContent = user.ssid;
                    el.value = user.ssid;
                    el.className = "dropdown-item";
                    select.appendChild(el);
                    console.log('Adding Option: ' + user.ssid); 
                }
                else
                    console.log('Ignoring duplicate SSID: ' + user.ssid);
                });
        });

    }
    


  </script>
  
  </body>
</html>